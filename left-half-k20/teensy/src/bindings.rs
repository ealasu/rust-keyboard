/* automatically generated by rust-bindgen */

pub const TEENSYDUINO: ::std::os::raw::c_uint = 118;
pub const F_CPU: ::std::os::raw::c_uint = 48000000;
pub const __NEWLIB__: ::std::os::raw::c_uint = 2;
pub const __NEWLIB_MINOR__: ::std::os::raw::c_uint = 2;
pub const ___int8_t_defined: ::std::os::raw::c_uint = 1;
pub const ___int16_t_defined: ::std::os::raw::c_uint = 1;
pub const ___int32_t_defined: ::std::os::raw::c_uint = 1;
pub const ___int64_t_defined: ::std::os::raw::c_uint = 1;
pub const ___int_least8_t_defined: ::std::os::raw::c_uint = 1;
pub const ___int_least16_t_defined: ::std::os::raw::c_uint = 1;
pub const ___int_least32_t_defined: ::std::os::raw::c_uint = 1;
pub const ___int_least64_t_defined: ::std::os::raw::c_uint = 1;
pub const __have_longlong64: ::std::os::raw::c_uint = 1;
pub const __have_long32: ::std::os::raw::c_uint = 1;
pub const __INT8: &'static [u8; 3usize] = b"hh\x00";
pub const __INT16: &'static [u8; 2usize] = b"h\x00";
pub const __INT64: &'static [u8; 3usize] = b"ll\x00";
pub const __FAST8: &'static [u8; 3usize] = b"hh\x00";
pub const __FAST16: &'static [u8; 2usize] = b"h\x00";
pub const __FAST64: &'static [u8; 3usize] = b"ll\x00";
pub const __LEAST8: &'static [u8; 3usize] = b"hh\x00";
pub const __LEAST16: &'static [u8; 2usize] = b"h\x00";
pub const __LEAST64: &'static [u8; 3usize] = b"ll\x00";
pub const __int8_t_defined: ::std::os::raw::c_uint = 1;
pub const __int16_t_defined: ::std::os::raw::c_uint = 1;
pub const __int32_t_defined: ::std::os::raw::c_uint = 1;
pub const __int64_t_defined: ::std::os::raw::c_uint = 1;
pub const __int_least8_t_defined: ::std::os::raw::c_uint = 1;
pub const __int_least16_t_defined: ::std::os::raw::c_uint = 1;
pub const __int_least32_t_defined: ::std::os::raw::c_uint = 1;
pub const __int_least64_t_defined: ::std::os::raw::c_uint = 1;
pub const __int_fast8_t_defined: ::std::os::raw::c_uint = 1;
pub const __int_fast16_t_defined: ::std::os::raw::c_uint = 1;
pub const __int_fast32_t_defined: ::std::os::raw::c_uint = 1;
pub const __int_fast64_t_defined: ::std::os::raw::c_uint = 1;
pub const WINT_MIN: ::std::os::raw::c_uint = 0;
pub const ENDPOINT_UNUSED: ::std::os::raw::c_uint = 0;
pub const ENDPOINT_TRANSIMIT_ONLY: ::std::os::raw::c_uint = 21;
pub const ENDPOINT_RECEIVE_ONLY: ::std::os::raw::c_uint = 25;
pub const ENDPOINT_TRANSMIT_AND_RECEIVE: ::std::os::raw::c_uint = 29;
pub const ENDPOINT_RECEIVE_ISOCHRONOUS: ::std::os::raw::c_uint = 24;
pub const ENDPOINT_TRANSMIT_ISOCHRONOUS: ::std::os::raw::c_uint = 20;
pub const VENDOR_ID: ::std::os::raw::c_uint = 5824;
pub const PRODUCT_ID: ::std::os::raw::c_uint = 1155;
pub const DEVICE_CLASS: ::std::os::raw::c_uint = 2;
pub const MANUFACTURER_NAME_LEN: ::std::os::raw::c_uint = 11;
pub const PRODUCT_NAME_LEN: ::std::os::raw::c_uint = 10;
pub const EP0_SIZE: ::std::os::raw::c_uint = 64;
pub const NUM_ENDPOINTS: ::std::os::raw::c_uint = 4;
pub const NUM_USB_BUFFERS: ::std::os::raw::c_uint = 12;
pub const NUM_INTERFACE: ::std::os::raw::c_uint = 2;
pub const CDC_STATUS_INTERFACE: ::std::os::raw::c_uint = 0;
pub const CDC_DATA_INTERFACE: ::std::os::raw::c_uint = 1;
pub const CDC_ACM_ENDPOINT: ::std::os::raw::c_uint = 2;
pub const CDC_RX_ENDPOINT: ::std::os::raw::c_uint = 3;
pub const CDC_TX_ENDPOINT: ::std::os::raw::c_uint = 4;
pub const CDC_ACM_SIZE: ::std::os::raw::c_uint = 16;
pub const CDC_RX_SIZE: ::std::os::raw::c_uint = 64;
pub const CDC_TX_SIZE: ::std::os::raw::c_uint = 64;
pub const ENDPOINT2_CONFIG: ::std::os::raw::c_uint = 21;
pub const ENDPOINT3_CONFIG: ::std::os::raw::c_uint = 25;
pub const ENDPOINT4_CONFIG: ::std::os::raw::c_uint = 21;
pub const __PGMSPACE_H_: ::std::os::raw::c_uint = 1;
pub const __NEWLIB_H__: ::std::os::raw::c_uint = 1;
pub const _NEWLIB_VERSION: &'static [u8; 6usize] = b"2.2.0\x00";
pub const _WANT_IO_LONG_LONG: ::std::os::raw::c_uint = 1;
pub const _WANT_REGISTER_FINI: ::std::os::raw::c_uint = 1;
pub const _MB_LEN_MAX: ::std::os::raw::c_uint = 1;
pub const HAVE_INITFINI_ARRAY: ::std::os::raw::c_uint = 1;
pub const _ATEXIT_DYNAMIC_ALLOC: ::std::os::raw::c_uint = 1;
pub const _HAVE_LONG_DOUBLE: ::std::os::raw::c_uint = 1;
pub const _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL: ::std::os::raw::c_uint = 1;
pub const _LDBL_EQ_DBL: ::std::os::raw::c_uint = 1;
pub const _FVWRITE_IN_STREAMIO: ::std::os::raw::c_uint = 1;
pub const _FSEEK_OPTIMIZATION: ::std::os::raw::c_uint = 1;
pub const _WIDE_ORIENT: ::std::os::raw::c_uint = 1;
pub const _UNBUF_STREAM_OPT: ::std::os::raw::c_uint = 1;
pub const __RAND_MAX: ::std::os::raw::c_uint = 2147483647;
pub const MODIFIERKEY_CTRL: ::std::os::raw::c_uint = 57345;
pub const MODIFIERKEY_SHIFT: ::std::os::raw::c_uint = 57346;
pub const MODIFIERKEY_ALT: ::std::os::raw::c_uint = 57348;
pub const MODIFIERKEY_GUI: ::std::os::raw::c_uint = 57352;
pub const MODIFIERKEY_LEFT_CTRL: ::std::os::raw::c_uint = 57345;
pub const MODIFIERKEY_LEFT_SHIFT: ::std::os::raw::c_uint = 57346;
pub const MODIFIERKEY_LEFT_ALT: ::std::os::raw::c_uint = 57348;
pub const MODIFIERKEY_LEFT_GUI: ::std::os::raw::c_uint = 57352;
pub const MODIFIERKEY_RIGHT_CTRL: ::std::os::raw::c_uint = 57360;
pub const MODIFIERKEY_RIGHT_SHIFT: ::std::os::raw::c_uint = 57376;
pub const MODIFIERKEY_RIGHT_ALT: ::std::os::raw::c_uint = 57408;
pub const MODIFIERKEY_RIGHT_GUI: ::std::os::raw::c_uint = 57472;
pub const KEY_SYSTEM_POWER_DOWN: ::std::os::raw::c_uint = 57985;
pub const KEY_SYSTEM_SLEEP: ::std::os::raw::c_uint = 57986;
pub const KEY_SYSTEM_WAKE_UP: ::std::os::raw::c_uint = 57987;
pub const KEY_MEDIA_PLAY: ::std::os::raw::c_uint = 58544;
pub const KEY_MEDIA_PAUSE: ::std::os::raw::c_uint = 58545;
pub const KEY_MEDIA_RECORD: ::std::os::raw::c_uint = 58546;
pub const KEY_MEDIA_FAST_FORWARD: ::std::os::raw::c_uint = 58547;
pub const KEY_MEDIA_REWIND: ::std::os::raw::c_uint = 58548;
pub const KEY_MEDIA_NEXT_TRACK: ::std::os::raw::c_uint = 58549;
pub const KEY_MEDIA_PREV_TRACK: ::std::os::raw::c_uint = 58550;
pub const KEY_MEDIA_STOP: ::std::os::raw::c_uint = 58551;
pub const KEY_MEDIA_EJECT: ::std::os::raw::c_uint = 58552;
pub const KEY_MEDIA_RANDOM_PLAY: ::std::os::raw::c_uint = 58544;
pub const KEY_MEDIA_PLAY_PAUSE: ::std::os::raw::c_uint = 58573;
pub const KEY_MEDIA_PLAY_SKIP: ::std::os::raw::c_uint = 58574;
pub const KEY_MEDIA_MUTE: ::std::os::raw::c_uint = 58594;
pub const KEY_MEDIA_VOLUME_INC: ::std::os::raw::c_uint = 58601;
pub const KEY_MEDIA_VOLUME_DEC: ::std::os::raw::c_uint = 58602;
pub const KEY_A: ::std::os::raw::c_uint = 61444;
pub const KEY_B: ::std::os::raw::c_uint = 61445;
pub const KEY_C: ::std::os::raw::c_uint = 61446;
pub const KEY_D: ::std::os::raw::c_uint = 61447;
pub const KEY_E: ::std::os::raw::c_uint = 61448;
pub const KEY_F: ::std::os::raw::c_uint = 61449;
pub const KEY_G: ::std::os::raw::c_uint = 61450;
pub const KEY_H: ::std::os::raw::c_uint = 61451;
pub const KEY_I: ::std::os::raw::c_uint = 61452;
pub const KEY_J: ::std::os::raw::c_uint = 61453;
pub const KEY_K: ::std::os::raw::c_uint = 61454;
pub const KEY_L: ::std::os::raw::c_uint = 61455;
pub const KEY_M: ::std::os::raw::c_uint = 61456;
pub const KEY_N: ::std::os::raw::c_uint = 61457;
pub const KEY_O: ::std::os::raw::c_uint = 61458;
pub const KEY_P: ::std::os::raw::c_uint = 61459;
pub const KEY_Q: ::std::os::raw::c_uint = 61460;
pub const KEY_R: ::std::os::raw::c_uint = 61461;
pub const KEY_S: ::std::os::raw::c_uint = 61462;
pub const KEY_T: ::std::os::raw::c_uint = 61463;
pub const KEY_U: ::std::os::raw::c_uint = 61464;
pub const KEY_V: ::std::os::raw::c_uint = 61465;
pub const KEY_W: ::std::os::raw::c_uint = 61466;
pub const KEY_X: ::std::os::raw::c_uint = 61467;
pub const KEY_Y: ::std::os::raw::c_uint = 61468;
pub const KEY_Z: ::std::os::raw::c_uint = 61469;
pub const KEY_1: ::std::os::raw::c_uint = 61470;
pub const KEY_2: ::std::os::raw::c_uint = 61471;
pub const KEY_3: ::std::os::raw::c_uint = 61472;
pub const KEY_4: ::std::os::raw::c_uint = 61473;
pub const KEY_5: ::std::os::raw::c_uint = 61474;
pub const KEY_6: ::std::os::raw::c_uint = 61475;
pub const KEY_7: ::std::os::raw::c_uint = 61476;
pub const KEY_8: ::std::os::raw::c_uint = 61477;
pub const KEY_9: ::std::os::raw::c_uint = 61478;
pub const KEY_0: ::std::os::raw::c_uint = 61479;
pub const KEY_ENTER: ::std::os::raw::c_uint = 61480;
pub const KEY_ESC: ::std::os::raw::c_uint = 61481;
pub const KEY_BACKSPACE: ::std::os::raw::c_uint = 61482;
pub const KEY_TAB: ::std::os::raw::c_uint = 61483;
pub const KEY_SPACE: ::std::os::raw::c_uint = 61484;
pub const KEY_MINUS: ::std::os::raw::c_uint = 61485;
pub const KEY_EQUAL: ::std::os::raw::c_uint = 61486;
pub const KEY_LEFT_BRACE: ::std::os::raw::c_uint = 61487;
pub const KEY_RIGHT_BRACE: ::std::os::raw::c_uint = 61488;
pub const KEY_BACKSLASH: ::std::os::raw::c_uint = 61489;
pub const KEY_NON_US_NUM: ::std::os::raw::c_uint = 61490;
pub const KEY_SEMICOLON: ::std::os::raw::c_uint = 61491;
pub const KEY_QUOTE: ::std::os::raw::c_uint = 61492;
pub const KEY_TILDE: ::std::os::raw::c_uint = 61493;
pub const KEY_COMMA: ::std::os::raw::c_uint = 61494;
pub const KEY_PERIOD: ::std::os::raw::c_uint = 61495;
pub const KEY_SLASH: ::std::os::raw::c_uint = 61496;
pub const KEY_CAPS_LOCK: ::std::os::raw::c_uint = 61497;
pub const KEY_F1: ::std::os::raw::c_uint = 61498;
pub const KEY_F2: ::std::os::raw::c_uint = 61499;
pub const KEY_F3: ::std::os::raw::c_uint = 61500;
pub const KEY_F4: ::std::os::raw::c_uint = 61501;
pub const KEY_F5: ::std::os::raw::c_uint = 61502;
pub const KEY_F6: ::std::os::raw::c_uint = 61503;
pub const KEY_F7: ::std::os::raw::c_uint = 61504;
pub const KEY_F8: ::std::os::raw::c_uint = 61505;
pub const KEY_F9: ::std::os::raw::c_uint = 61506;
pub const KEY_F10: ::std::os::raw::c_uint = 61507;
pub const KEY_F11: ::std::os::raw::c_uint = 61508;
pub const KEY_F12: ::std::os::raw::c_uint = 61509;
pub const KEY_PRINTSCREEN: ::std::os::raw::c_uint = 61510;
pub const KEY_SCROLL_LOCK: ::std::os::raw::c_uint = 61511;
pub const KEY_PAUSE: ::std::os::raw::c_uint = 61512;
pub const KEY_INSERT: ::std::os::raw::c_uint = 61513;
pub const KEY_HOME: ::std::os::raw::c_uint = 61514;
pub const KEY_PAGE_UP: ::std::os::raw::c_uint = 61515;
pub const KEY_DELETE: ::std::os::raw::c_uint = 61516;
pub const KEY_END: ::std::os::raw::c_uint = 61517;
pub const KEY_PAGE_DOWN: ::std::os::raw::c_uint = 61518;
pub const KEY_RIGHT: ::std::os::raw::c_uint = 61519;
pub const KEY_LEFT: ::std::os::raw::c_uint = 61520;
pub const KEY_DOWN: ::std::os::raw::c_uint = 61521;
pub const KEY_UP: ::std::os::raw::c_uint = 61522;
pub const KEY_NUM_LOCK: ::std::os::raw::c_uint = 61523;
pub const KEYPAD_SLASH: ::std::os::raw::c_uint = 61524;
pub const KEYPAD_ASTERIX: ::std::os::raw::c_uint = 61525;
pub const KEYPAD_MINUS: ::std::os::raw::c_uint = 61526;
pub const KEYPAD_PLUS: ::std::os::raw::c_uint = 61527;
pub const KEYPAD_ENTER: ::std::os::raw::c_uint = 61528;
pub const KEYPAD_1: ::std::os::raw::c_uint = 61529;
pub const KEYPAD_2: ::std::os::raw::c_uint = 61530;
pub const KEYPAD_3: ::std::os::raw::c_uint = 61531;
pub const KEYPAD_4: ::std::os::raw::c_uint = 61532;
pub const KEYPAD_5: ::std::os::raw::c_uint = 61533;
pub const KEYPAD_6: ::std::os::raw::c_uint = 61534;
pub const KEYPAD_7: ::std::os::raw::c_uint = 61535;
pub const KEYPAD_8: ::std::os::raw::c_uint = 61536;
pub const KEYPAD_9: ::std::os::raw::c_uint = 61537;
pub const KEYPAD_0: ::std::os::raw::c_uint = 61538;
pub const KEYPAD_PERIOD: ::std::os::raw::c_uint = 61539;
pub const KEY_NON_US_BS: ::std::os::raw::c_uint = 61540;
pub const KEY_MENU: ::std::os::raw::c_uint = 61541;
pub const KEY_F13: ::std::os::raw::c_uint = 61544;
pub const KEY_F14: ::std::os::raw::c_uint = 61545;
pub const KEY_F15: ::std::os::raw::c_uint = 61546;
pub const KEY_F16: ::std::os::raw::c_uint = 61547;
pub const KEY_F17: ::std::os::raw::c_uint = 61548;
pub const KEY_F18: ::std::os::raw::c_uint = 61549;
pub const KEY_F19: ::std::os::raw::c_uint = 61550;
pub const KEY_F20: ::std::os::raw::c_uint = 61551;
pub const KEY_F21: ::std::os::raw::c_uint = 61552;
pub const KEY_F22: ::std::os::raw::c_uint = 61553;
pub const KEY_F23: ::std::os::raw::c_uint = 61554;
pub const KEY_F24: ::std::os::raw::c_uint = 61555;
pub const KEY_UP_ARROW: ::std::os::raw::c_uint = 61522;
pub const KEY_DOWN_ARROW: ::std::os::raw::c_uint = 61521;
pub const KEY_LEFT_ARROW: ::std::os::raw::c_uint = 61520;
pub const KEY_RIGHT_ARROW: ::std::os::raw::c_uint = 61519;
pub const KEY_RETURN: ::std::os::raw::c_uint = 61480;
pub const KEY_LEFT_CTRL: ::std::os::raw::c_uint = 57345;
pub const KEY_LEFT_SHIFT: ::std::os::raw::c_uint = 57346;
pub const KEY_LEFT_ALT: ::std::os::raw::c_uint = 57348;
pub const KEY_LEFT_GUI: ::std::os::raw::c_uint = 57352;
pub const KEY_RIGHT_CTRL: ::std::os::raw::c_uint = 57360;
pub const KEY_RIGHT_SHIFT: ::std::os::raw::c_uint = 57376;
pub const KEY_RIGHT_ALT: ::std::os::raw::c_uint = 57408;
pub const KEY_RIGHT_GUI: ::std::os::raw::c_uint = 57472;
pub const SHIFT_MASK: ::std::os::raw::c_uint = 64;
pub const KEYCODE_MASK: ::std::os::raw::c_uint = 127;
pub const ASCII_20: ::std::os::raw::c_uint = 61484;
pub const ASCII_21: ::std::os::raw::c_uint = 61534;
pub const ASCII_22: ::std::os::raw::c_uint = 61556;
pub const ASCII_23: ::std::os::raw::c_uint = 61536;
pub const ASCII_24: ::std::os::raw::c_uint = 61537;
pub const ASCII_25: ::std::os::raw::c_uint = 61538;
pub const ASCII_26: ::std::os::raw::c_uint = 61540;
pub const ASCII_27: ::std::os::raw::c_uint = 61492;
pub const ASCII_28: ::std::os::raw::c_uint = 61542;
pub const ASCII_29: ::std::os::raw::c_uint = 61543;
pub const ASCII_2A: ::std::os::raw::c_uint = 61541;
pub const ASCII_2B: ::std::os::raw::c_uint = 61550;
pub const ASCII_2C: ::std::os::raw::c_uint = 61494;
pub const ASCII_2D: ::std::os::raw::c_uint = 61485;
pub const ASCII_2E: ::std::os::raw::c_uint = 61495;
pub const ASCII_2F: ::std::os::raw::c_uint = 61496;
pub const ASCII_30: ::std::os::raw::c_uint = 61479;
pub const ASCII_31: ::std::os::raw::c_uint = 61470;
pub const ASCII_32: ::std::os::raw::c_uint = 61471;
pub const ASCII_33: ::std::os::raw::c_uint = 61472;
pub const ASCII_34: ::std::os::raw::c_uint = 61473;
pub const ASCII_35: ::std::os::raw::c_uint = 61474;
pub const ASCII_36: ::std::os::raw::c_uint = 61475;
pub const ASCII_37: ::std::os::raw::c_uint = 61476;
pub const ASCII_38: ::std::os::raw::c_uint = 61477;
pub const ASCII_39: ::std::os::raw::c_uint = 61478;
pub const ASCII_3A: ::std::os::raw::c_uint = 61555;
pub const ASCII_3B: ::std::os::raw::c_uint = 61491;
pub const ASCII_3C: ::std::os::raw::c_uint = 61558;
pub const ASCII_3D: ::std::os::raw::c_uint = 61486;
pub const ASCII_3E: ::std::os::raw::c_uint = 61559;
pub const ASCII_3F: ::std::os::raw::c_uint = 61560;
pub const ASCII_40: ::std::os::raw::c_uint = 61535;
pub const ASCII_41: ::std::os::raw::c_uint = 61508;
pub const ASCII_42: ::std::os::raw::c_uint = 61509;
pub const ASCII_43: ::std::os::raw::c_uint = 61510;
pub const ASCII_44: ::std::os::raw::c_uint = 61511;
pub const ASCII_45: ::std::os::raw::c_uint = 61512;
pub const ASCII_46: ::std::os::raw::c_uint = 61513;
pub const ASCII_47: ::std::os::raw::c_uint = 61514;
pub const ASCII_48: ::std::os::raw::c_uint = 61515;
pub const ASCII_49: ::std::os::raw::c_uint = 61516;
pub const ASCII_4A: ::std::os::raw::c_uint = 61517;
pub const ASCII_4B: ::std::os::raw::c_uint = 61518;
pub const ASCII_4C: ::std::os::raw::c_uint = 61519;
pub const ASCII_4D: ::std::os::raw::c_uint = 61520;
pub const ASCII_4E: ::std::os::raw::c_uint = 61521;
pub const ASCII_4F: ::std::os::raw::c_uint = 61522;
pub const ASCII_50: ::std::os::raw::c_uint = 61523;
pub const ASCII_51: ::std::os::raw::c_uint = 61524;
pub const ASCII_52: ::std::os::raw::c_uint = 61525;
pub const ASCII_53: ::std::os::raw::c_uint = 61526;
pub const ASCII_54: ::std::os::raw::c_uint = 61527;
pub const ASCII_55: ::std::os::raw::c_uint = 61528;
pub const ASCII_56: ::std::os::raw::c_uint = 61529;
pub const ASCII_57: ::std::os::raw::c_uint = 61530;
pub const ASCII_58: ::std::os::raw::c_uint = 61531;
pub const ASCII_59: ::std::os::raw::c_uint = 61532;
pub const ASCII_5A: ::std::os::raw::c_uint = 61533;
pub const ASCII_5B: ::std::os::raw::c_uint = 61487;
pub const ASCII_5C: ::std::os::raw::c_uint = 61489;
pub const ASCII_5D: ::std::os::raw::c_uint = 61488;
pub const ASCII_5E: ::std::os::raw::c_uint = 61539;
pub const ASCII_5F: ::std::os::raw::c_uint = 61549;
pub const ASCII_60: ::std::os::raw::c_uint = 61493;
pub const ASCII_61: ::std::os::raw::c_uint = 61444;
pub const ASCII_62: ::std::os::raw::c_uint = 61445;
pub const ASCII_63: ::std::os::raw::c_uint = 61446;
pub const ASCII_64: ::std::os::raw::c_uint = 61447;
pub const ASCII_65: ::std::os::raw::c_uint = 61448;
pub const ASCII_66: ::std::os::raw::c_uint = 61449;
pub const ASCII_67: ::std::os::raw::c_uint = 61450;
pub const ASCII_68: ::std::os::raw::c_uint = 61451;
pub const ASCII_69: ::std::os::raw::c_uint = 61452;
pub const ASCII_6A: ::std::os::raw::c_uint = 61453;
pub const ASCII_6B: ::std::os::raw::c_uint = 61454;
pub const ASCII_6C: ::std::os::raw::c_uint = 61455;
pub const ASCII_6D: ::std::os::raw::c_uint = 61456;
pub const ASCII_6E: ::std::os::raw::c_uint = 61457;
pub const ASCII_6F: ::std::os::raw::c_uint = 61458;
pub const ASCII_70: ::std::os::raw::c_uint = 61459;
pub const ASCII_71: ::std::os::raw::c_uint = 61460;
pub const ASCII_72: ::std::os::raw::c_uint = 61461;
pub const ASCII_73: ::std::os::raw::c_uint = 61462;
pub const ASCII_74: ::std::os::raw::c_uint = 61463;
pub const ASCII_75: ::std::os::raw::c_uint = 61464;
pub const ASCII_76: ::std::os::raw::c_uint = 61465;
pub const ASCII_77: ::std::os::raw::c_uint = 61466;
pub const ASCII_78: ::std::os::raw::c_uint = 61467;
pub const ASCII_79: ::std::os::raw::c_uint = 61468;
pub const ASCII_7A: ::std::os::raw::c_uint = 61469;
pub const ASCII_7B: ::std::os::raw::c_uint = 61551;
pub const ASCII_7C: ::std::os::raw::c_uint = 61553;
pub const ASCII_7D: ::std::os::raw::c_uint = 61552;
pub const ASCII_7E: ::std::os::raw::c_uint = 61557;
pub const ASCII_7F: ::std::os::raw::c_uint = 61482;
pub type __int8_t = ::std::os::raw::c_char;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_longlong;
pub type __uint64_t = ::std::os::raw::c_ulonglong;
pub type __int_least8_t = ::std::os::raw::c_char;
pub type __uint_least8_t = ::std::os::raw::c_uchar;
pub type __int_least16_t = ::std::os::raw::c_short;
pub type __uint_least16_t = ::std::os::raw::c_ushort;
pub type __int_least32_t = ::std::os::raw::c_int;
pub type __uint_least32_t = ::std::os::raw::c_uint;
pub type __int_least64_t = ::std::os::raw::c_longlong;
pub type __uint_least64_t = ::std::os::raw::c_ulonglong;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __uintptr_t = ::std::os::raw::c_ulong;
pub type int_least8_t = __int_least8_t;
pub type uint_least8_t = __uint_least8_t;
pub type int_least16_t = __int_least16_t;
pub type uint_least16_t = __uint_least16_t;
pub type int_least32_t = __int_least32_t;
pub type uint_least32_t = __uint_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_char;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type int_fast16_t = ::std::os::raw::c_short;
pub type uint_fast16_t = ::std::os::raw::c_ushort;
pub type int_fast32_t = ::std::os::raw::c_int;
pub type uint_fast32_t = ::std::os::raw::c_uint;
pub type int_fast64_t = ::std::os::raw::c_longlong;
pub type uint_fast64_t = ::std::os::raw::c_ulonglong;
pub type intmax_t = ::std::os::raw::c_longlong;
pub type uintmax_t = ::std::os::raw::c_ulonglong;
pub type wchar_t = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy)]
pub struct _bindgen_ty_1 {
    pub __max_align_ll: ::std::os::raw::c_longlong,
    pub __max_align_ld: f64,
}
impl Clone for _bindgen_ty_1 {
    fn clone(&self) -> Self { *self }
}
pub type max_align_t = _bindgen_ty_1;
#[repr(C)]
#[derive(Debug, Copy)]
pub struct _bindgen_ty_2 {
    pub quot: intmax_t,
    pub rem: intmax_t,
}
#[test]
fn bindgen_test_layout__bindgen_ty_2() {
    assert_eq!(::std::mem::size_of::<_bindgen_ty_2>() , 16usize);
    assert_eq!(::std::mem::align_of::<_bindgen_ty_2>() , 8usize);
}
impl Clone for _bindgen_ty_2 {
    fn clone(&self) -> Self { *self }
}
pub type imaxdiv_t = _bindgen_ty_2;
extern "C" {
    pub fn imaxabs(j: intmax_t) -> intmax_t;
}
extern "C" {
    pub fn imaxdiv(numer: intmax_t, denomer: intmax_t) -> imaxdiv_t;
}
extern "C" {
    pub fn strtoimax(arg1: *const ::std::os::raw::c_uchar,
                     arg2: *mut *mut ::std::os::raw::c_uchar,
                     arg3: ::std::os::raw::c_int) -> intmax_t;
}
extern "C" {
    pub fn strtoumax(arg1: *const ::std::os::raw::c_uchar,
                     arg2: *mut *mut ::std::os::raw::c_uchar,
                     arg3: ::std::os::raw::c_int) -> uintmax_t;
}
extern "C" {
    pub fn wcstoimax(arg1: *const wchar_t, arg2: *mut *mut wchar_t,
                     arg3: ::std::os::raw::c_int) -> intmax_t;
}
extern "C" {
    pub fn wcstoumax(arg1: *const wchar_t, arg2: *mut *mut wchar_t,
                     arg3: ::std::os::raw::c_int) -> uintmax_t;
}
pub type prog_void = ::std::os::raw::c_void;
pub type prog_char = ::std::os::raw::c_uchar;
pub type prog_uchar = ::std::os::raw::c_uchar;
pub type prog_int8_t = i8;
pub type prog_uint8_t = u8;
pub type prog_int16_t = i16;
pub type prog_uint16_t = u16;
pub type prog_int32_t = i32;
pub type prog_uint32_t = u32;
pub type prog_int64_t = i64;
pub type prog_uint64_t = u64;
extern "C" {
    #[link_name = "keycodes_ascii"]
    pub static mut keycodes_ascii: *const u8;
}
extern "C" {
    #[link_name = "keycodes_iso_8859_1"]
    pub static mut keycodes_iso_8859_1: *const u8;
}
extern "C" {
    pub fn usb_keyboard_write(c: u8);
}
extern "C" {
    pub fn usb_keyboard_write_unicode(cpoint: u16);
}
extern "C" {
    pub fn usb_keyboard_press_keycode(n: u16);
}
extern "C" {
    pub fn usb_keyboard_release_keycode(n: u16);
}
extern "C" {
    pub fn usb_keyboard_release_all();
}
extern "C" {
    pub fn usb_keyboard_press(key: u8, modifier: u8) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usb_keyboard_send() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn usb_keymedia_release_all();
}
extern "C" {
    #[link_name = "keyboard_modifier_keys"]
    pub static mut keyboard_modifier_keys: u8;
}
extern "C" {
    #[link_name = "keyboard_keys"]
    pub static mut keyboard_keys: [u8; 6usize];
}
extern "C" {
    #[link_name = "keyboard_protocol"]
    pub static mut keyboard_protocol: u8;
}
extern "C" {
    #[link_name = "keyboard_idle_config"]
    pub static mut keyboard_idle_config: u8;
}
extern "C" {
    #[link_name = "keyboard_idle_count"]
    pub static mut keyboard_idle_count: u8;
}
extern "C" {
    #[link_name = "keyboard_leds"]
    pub static mut keyboard_leds: u8;
}
#[repr(C)]
pub struct usb_packet_struct {
    pub len: u16,
    pub index: u16,
    pub next: *mut usb_packet_struct,
    pub buf: [u8; 64usize],
}
#[test]
fn bindgen_test_layout_usb_packet_struct() {
    assert_eq!(::std::mem::size_of::<usb_packet_struct>() , 72usize);
    assert_eq!(::std::mem::align_of::<usb_packet_struct>() , 4usize);
}
pub type usb_packet_t = usb_packet_struct;
extern "C" {
    pub fn usb_malloc() -> *mut usb_packet_t;
}
extern "C" {
    pub fn usb_free(p: *mut usb_packet_t);
}
extern "C" {
    pub fn usb_init();
}
extern "C" {
    pub fn usb_init_serialnumber();
}
extern "C" {
    pub fn usb_isr();
}
extern "C" {
    pub fn usb_rx(endpoint: u32) -> *mut usb_packet_t;
}
extern "C" {
    pub fn usb_tx_byte_count(endpoint: u32) -> u32;
}
extern "C" {
    pub fn usb_tx_packet_count(endpoint: u32) -> u32;
}
extern "C" {
    pub fn usb_tx(endpoint: u32, packet: *mut usb_packet_t);
}
extern "C" {
    pub fn usb_tx_isochronous(endpoint: u32,
                              data: *mut ::std::os::raw::c_void, len: u32);
}
extern "C" {
    #[link_name = "usb_configuration"]
    pub static mut usb_configuration: u8;
}
extern "C" {
    #[link_name = "usb_rx_byte_count_data"]
    pub static mut usb_rx_byte_count_data: [u16; 4usize];
}
extern "C" {
    pub fn usb_rx_byte_count(endpoint: u32) -> u32;
}
extern "C" {
    #[link_name = "usb_cdc_line_coding"]
    pub static mut usb_cdc_line_coding: [u32; 2usize];
}
extern "C" {
    #[link_name = "usb_cdc_line_rtsdtr_millis"]
    pub static mut usb_cdc_line_rtsdtr_millis: u32;
}
extern "C" {
    #[link_name = "systick_millis_count"]
    pub static mut systick_millis_count: u32;
}
extern "C" {
    #[link_name = "usb_cdc_line_rtsdtr"]
    pub static mut usb_cdc_line_rtsdtr: u8;
}
extern "C" {
    #[link_name = "usb_cdc_transmit_flush_timer"]
    pub static mut usb_cdc_transmit_flush_timer: u8;
}
extern "C" {
    pub fn usb_serial_flush_callback();
}
